{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,KAAMF,SAASC,cAAc,sBAC7BE,OAAQH,SAASC,cAAc,wBAC/BG,KAAMJ,SAASC,cAAc,UAI/BH,EAAKC,WAAWM,iBAAiB,SA6CjC,SAAsBC,GACpBC,EAAaC,OAAOF,EAAEG,cAAcC,M,IA7CtCZ,EAAKI,KAAKG,iBAAiB,SA+C3B,SAAgBC,GACdK,EAAOH,OAAOF,EAAEG,cAAcC,M,IA/ChCZ,EAAKK,OAAOE,iBAAiB,SAiD7B,SAAkBC,GAChBM,EAASJ,OAAOF,EAAEG,cAAcC,M,IAjDlCZ,EAAKM,KAAKC,iBAAiB,UA2B3B,SAAkBC,GAChBA,EAAEO,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BC,EAAcC,GAAY,EAAGT,GAC1BU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARE,SAAUC,EAAKH,EAALG,MACjBC,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAoCC,OAAfN,EAAS,QAAYM,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAR,G,IAAGS,EAAQT,EAARE,SAAUC,EAAKH,EAALG,MAClBC,EAAA1B,GAAS2B,OAAOK,QAAQ,oBAAmCH,OAAfE,EAAS,QAAYF,OAANJ,EAAM,M,IAErEd,GAAcI,C,IApClB,IAAIJ,EAAa,KACbI,EAAO,KACPC,EAAS,KACTI,EAAW,KAGf,SAASD,EAAcc,EAAUR,GAG/B,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAE7BC,YAAW,WACaC,KAAKC,SAAW,GAGtCJ,EAAQ,CAAEX,SAAAS,EAAUR,UAEpBW,EAAO,CAAEZ,SAAAS,EAAUR,S,GAElBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  firstDelay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('.form')\n}\n\n\nrefs.firstDelay.addEventListener('input', onFirstDelay);\nrefs.step.addEventListener('input', onStep);\nrefs.amount.addEventListener('input', onAmount);\nrefs.form.addEventListener('submit', onSubmit);\n\nlet firstDelay = null;\nlet step = null;\nlet amount = null;\nlet position = null;\n\n\nfunction createPromise(position, delay) {\n\n\n  return new Promise((resolve, reject) => {\n\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n\n  if (shouldResolve) {\n    resolve({ position, delay })\n  } else {\n    reject({ position, delay })\n  }\n  }, delay);\n    \n  })\n  \n};\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  \n  for (let i = 0; i < amount; i++) {\n    createPromise(position += 1, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    firstDelay += step;\n  }\n}\n\nfunction onFirstDelay(e) {\n  firstDelay = Number(e.currentTarget.value);\n}\nfunction onStep(e) {\n  step = Number(e.currentTarget.value);\n}\nfunction onAmount(e) {\n  amount = Number(e.currentTarget.value);\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","firstDelay","document","querySelector","step","amount","form","addEventListener","e","$ce04d3a99e08e73b$var$firstDelay","Number","currentTarget","value","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","preventDefault","i","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$position","then","param","position2","position","delay","$parcel$interopDefault","Notify","success","concat","catch","position3","failure","position1","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.dbf8c38b.js.map"}